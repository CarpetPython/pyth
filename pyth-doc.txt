Pyth documentation.

  - Space character. Identity function, suppresses print at beginning of line.
! - Logical not.
" - Begins and ends string literals.
# - For utf32 compression and decompression. String to de-, 1 entry list to -.
$ - Toggle non-parsing mode. Characters placed directly into python code.
% - Mod. Can also be used for formatted strings, in theory.
& - Logical and, with short circuit evaluation.
' - Head. First element of list/string. Also +1 for integers.
( - Tuple. Unbounded arity.
) - End current argument. Ends unbounded functions, statements.
* - Times. For lists, strings, numbers.
+ - Plus. Works on lists, strings, numbers, sets.
, - Pairing. Takes two inputs, gives tuple of them. Usable with assignment.
- - Minus. For numbers. Also set difference, if first input is a set.
. - Begins numbers other than single digit, also for decimals.
/ - Integer division.

0-9 - Integer literals

: - At slice. Given sequence, int, int, returns python slice applied to seq.
; - Pop. Remove last element of list, return it.
< - Less than. Proper subset if first is a set. Lexicographic for sequences.
= - Assignment, uses deepcopy.
> - Greater than. Proper superset if first is a set. Lexi. for sequences.
? - Python ternary. ?abc -> a if b else c. Lazy evaluation.
@ - At. Sequence/dict indexing.
A - all(seq)
B - break. Implicit )
C - chr(string), ord(int)
D - def. Defines a function. Must overwrite function of correct arity.
E - else statement.
F - for statement. Takes interator variable, iterator, body.
G - G='abc..xyz'.
H - H={} (Empty dict, not set.)
I - if statement.
J - autoinitializing variable. On first use, J=copy(_). Afterwards, variable.
K - autoinitializing variable. On first use, K=_. Afterwards, variable.
L - One input range. Casts non-ints to int with len.
M - max(seq)
N - N=None
O - Random choice from sequence. Cast int to range
P - Split string on string. On false input splits on whitespace. (_.split())
Q - Floating point division.
R - return. implicit ).
S - sorted(seq)
T - T=10
U - upper. Convert string to uppercase.
V - Reverse seq. ([::-1])
W - while statement.
X - index. Returns first appearance of 2nd in 1st, -1 on failiure.
Y - Y=[]
Z - Z=0
[ - list. Unbounded arity.
\ - End all of current arguments. Pop out of everything.
] - list containing one element. ([_])
^ - pow.
_ - neg. -1*_
` - repr.
a - _.append(_)
b - b='\n'
c - count. Number of appearances of 2nd in 1st.
d - d=' '
e - lower. Convert string to uppercase.
f - filter. lambda is T -> Y -> Z -> T ...
g - Greater than or equal to. is 1st is set, uses superset.
h - Read file. Takes file name as user input, creates corresponding string.
i - Round. Cast to float if 2nd is 0. Cast to int if no 2nd.
j - join. Join 2nd with 1st interspersed between each.
k - k=''
l - len
m - map. lambda is d -> k -> b -> d
n - min(seq)
o - order by key. Lambda then seq. Maintains 2nd's type. N -> Z -> N
p - print. Implicitly print newline terminated. Use p to alter.
q - ==
r - range. Cast to list, though. 2 input.
s - sum. Reduce on +.
t - tail. _[1:]. Also, -1 for integers.
u - reduce. lambda is G,H -> N,T -> G,H
v - eval. Uses python eval. Use to cast to int and such.
x - exec. Uses pyth exec.
y - any(seq)
z - zip. Arity 2.
{ - set. Arity 1.
| - logical or. Short circuiting.
} - in. Python style.
~ - +=.
