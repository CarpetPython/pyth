<newline> 1 N newline  Separates without suppressing printing.
<space> 1 N blank Primarily used to separate numeric literals. Also suppresses printing, which is default on.
! 1 N not Logical not. Uses Python's truthy/falsy.
" X N quote Begins and ends string literals. Optional at end of line.
# S Y infinite-loop "While True:" loop. On error, suppresses error and breaks out of loop.
$ X N super-quote Begins and ends Python literals. A Python literal is placed directly into the compiled Python output. Counts as one argument for arity purposes. Disabled online.
% 2 N mod On integers, modulous. On string, string formatting. %<int><seq> is a modular slice, <seq>[::<int>] in Python.
& 2 N Python's and-operator (short circuiting). &ab returns a, if it evaluates to a falsy value otherwise b.
' 1 N quote-file Cat file, return file a list of lines. File name as input.
( I N tuple Tuple constructor. Unbounded.
) X N close-paren Ends functions, statements. Marks last line of statement, last arg. of function. Necessary for statements, unbounded functions.
* 2 N times Like python, multiplication, replication. Cartesian product on lists, tuples or sets.
+ 2 N plus Addition, concatenation. Set union. Prepend or append non-list to list.
, 2 N pair 2 entry tuple.
- 2 N minus Subtraction, setwise difference. Maintains order. -<num><seq> coerces number to sequence type. Return type is type of first arg.
. X N point Numeric literals. Secondary function list - see end of doc for details.
/ 2 N div Floored division. .count() method on containers.
0-9 X N number Numeric literals
: 3 N slice-sub Python slice. :<seq><int><int> -> <seq>[<int>:<int>]. :<str><str><str> is regex substitution, substitute in a, b for c. :<str><str><oth> is regex search, boolean. :<idx><col><any> is indexed substitution. For every index in b an element is taken from c (cycling when exhausted), and assigned to a at that index.
; X N end-line End everything. Infinite ). Best used in statements.
< 2 N less-than Less than, subset, slice. < seq num is seq[:num].
= 2 Y defined as Assignment, using deepcopy. Cannot be strung; e.g. while b=d=1 works in Python, ==bd1 fails in Pyth. Augmented assignment. T*=2 -> T=20.
> 2 N greater-than Greater than, superset, slice. > seq num is seq[num:].
? 3 N ternary Python ternary. ?abc => a if b else c
@ 2 N lookup Lookup from str, list or dict. Modulo wrapping on list, str. On seq, seq, intersection. Specifically, filter second arg on presense in first arg. On num, num, bth root of a.
A 3 Y assign-pair Aabc => a,b = c. First arguments must be variables. c must be a 2-tuple.
B 0 Y break Python break. Implicit ).
C 1 N chr char -> int, int -> char. Matrix transpose on list of lists, zip(*a) specifically.
D S Y def Python def. Match arity w/ existing function. Memoized.
E S Y else Python else.
F S Y for Python for.
G 0 N strinG.lowercase Variable. "abcdefghijklmnopqrstuvwxyz"
H 0 N hash-table Variable. {}
I S Y if Python if.
J 1 Y J Variable. Autoinitializing. J=copy(_).
K 1 Y K Variable. Autoinitializing. K=_. For stringing.
L 2 Y lambda define y(b): return _.
M 3 N the-one-after-L define g(G,H): return _.
N 0 N N Variable. '"'
O 1 N randOm-chOice random.choice(_). Uses range(int). O0 = random.random()
P 1 N Prime/Pop prime factorization on int. All but last on str, list.
Q 0 N quick Variable. Autoinitializing to evaluated input.
R 1 Y return Python return. Impliciit ).
S 1 N sorted Python sorted.
T 0 N ten Variable. 10
U 1 N unary-range Python unary range. Splats 2 tuples. U_=Ul_ on str, list.
V S Y eval-loop Loop times equal to input. Equivalent to FNU
W S Y while Python while.
X 3 Y indeXed assign Indexed assignment, returns updated. Only returns on str, mod-wrap on list. On <str><str>_ or <list><list>_, where _ is <str> or <list>, performs translation. On <int><list> or <any><dict>, performs indexed +=. Assigns if key not in dict.
Y 0 N Y Variable. []
Z 0 N zero Variable. 0
[ X N list List constructor. Unbounded.
\ X N char-of Escape character to string.
] 1 N end-list One element list.
^ 2 N power Python pow, cartesian product with # of repeats.
_ 1 N neg Negation. Str and list reverse.
` 1 N repr Python repr.
a  2 N append Python .append(), .add(). First arguement must be a list or set. Returns resultant list or string as well as modifiying input. On non-hashable additions to set, casts to tuple.
b 0 N line-Break Variable. "\n"
c 2 N chop On <str/list><int> chop str/list every n elements. On <int><str/list> split str/list into n pieces (elements are equally distributed). On <str><str>, str.split. On <num><num> floating point division.
d 0 N d Variable. " "
e 1 N end %10 or last element.
f 2 N filter Implicit lambda, T -> Y -> Z -> . on num, iter.count
g 2 N greater-or-eq Python >=. Superset. g<seq><int> = seq[int-1:]
h 1 N head First element, +1.
i 2 N int Convert str or list from given base to base 10, or gcd.
j 2 N join Python join, or convert to base. Output in list form.
k 0 N k Variable. ""
l 1 N len Python len. log base 2 on nums.
m 2 N map Python 2 map. Int as second arg -> range(<int>). implicit lambda, d -> k -> b ->
n 2 N not-equal Python !=.
o 2 N order-by Python sorted, key=. Implicit lambda, N -> Z ->
p 2 N print Python print, end=. Implicitly called with "\n".
q 2 N equals Python ==.
r 2 N range Python 2 range. Rev if a>b. Various string processing.
s 1 N sum Reduce + on list, cast to int on other.
t 1 N tail _[1:]. _-1.
u 3 N redUce Reduce, implicit lambda. 3rd is base case. G,H -> N,T. Fixed point operator if 2nd arg ommited and ) used, e.g. u<1st><3rd>).
v 1 N eVal Python eval. Often used for str -> int.
w 1 N raW_input Python 3 input()
x 2 N indeX Find first occurance. -1 if not found. Bitwise xor.
y 1 N powerset On num, double. On seq, powerset.
z 0 N z Variable. Autoinitializing to input.
{ 1 N set Python set. Makes one element set on num.
| 2 N or Logical or. Shortcircuiting.
} 2 N in Python in.
~ 1 N += Python +=.
.a 1 N abs Python abs(_).
.A 1 N all Python all(_).
.B 1 N bin Binary string representing _. Direct on int, interpreted as UTF-8 on str.
.c 2 N combinations Combinations of elements from a of length b.
.C 2 N comb-replacement Combinations of elements from a of length b, with replacement.
.d 1 n dict
.D 2 N divmod
.e 2 N enumerate map over a enumerate. First arg is lambda, (k, Y) -> (b, Z) ->. k is the number, Y is the sequence.
.E 1 N any Python any(_).
.f 1 N float
.F 2 N format a.format(b) - if b is a non-string sequence, it will be unpacked.
.h 1 N hash
.H 1 N hex Hexadecimal string representing _. Direct on int, interpreted as UTF-8 on str.
.l 2 N log Python math.log(a, b).
.m 2 N minimal Filter 2nd arg on elements which give minimal value when 1st arg is aplied. First arg is lambda, b ->
.M 2 N maximal Filter 2nd arg on elements which give maximal value when 1st arg is aplied. First arg is lambda, Z ->
.N 1 Y the-one-after-M def :(N, T, Y): return _.
.O 1 N oct Octal string representing _. Direct on int, interpreted as UTF-8 on str.
.p 1 N permutations itertools.permutations(_).
.P 2 N permutations itertools.permutations(a, b).
.q 0 Y quit sys.exit(0). Exits the program immediately, except within #, where it breaks but does not exit.
.Q 0 N eval-all-input Take all of stdin, return as list of evaluated (literal_eval) lines.
.R 2 N round Python round(a, b).
.r 1 N rle On seq, performs run length encoding, in the form [[elem, count], [elem, count] ...]. On set, sorts then calls.
.s 2 N strip-chars a.strip(b)
.S 1 N shuffle .S<col> random.shuffle(<col>). str out if str in, otherwise list out. .S(<int>) = .S(range(<int>))
.t 2 N trigonometry Collection of trigonometric functions.
.u 1 N unpack-close Shorthand for .*_).
.x 1 N multiply product, over a non-str seq. Uses Pyth *. With num is random.seed.
.z 0 N all-input Take all of stdin, return as list of lines.
.^ 3 N powmod Python pow(a, b, c).
.& 2 N bitand Python bitwise &.
.| 2 N bitor Python |. Bitwise or on ints, setwise union on collections. Casts to 1st arg type.
.< 2 N leftshift Leftshift on int, cyclic leftshift on str/list.
.> 2 N rightshift Rightshift on int, cyclic rightshift on str/list.
.* 1 N unpack Python unpacking. Literally translates to *(_) in the output.
.) 1 N pop Remove and return last element of a list. Symbol from Golfscript.
.( 2 N pop2 Remove and return indexed element of a list.
._ 1 N sign Use on num. 1 if positive, -1 if negative, 0 otherwise.
.: 2 N substring On :<seq><int> return all substrings of <seq> of length <int>. Cast <int> to range, cast <col> by length. Float 2nd arg gives that ratio of the length of the seq substrings.
